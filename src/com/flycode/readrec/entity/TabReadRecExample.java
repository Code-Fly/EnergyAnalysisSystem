package com.flycode.readrec.entity;

import java.util.ArrayList;
import java.util.List;

public class TabReadRecExample {
	
	 protected String tableName;
	
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    protected List<Criteria> oredCriteria;

    public String getTableName() {
		return tableName;
	}

	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public TabReadRecExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andInfoIDIsNull() {
            addCriterion("infoID is null");
            return (Criteria) this;
        }

        public Criteria andInfoIDIsNotNull() {
            addCriterion("infoID is not null");
            return (Criteria) this;
        }

        public Criteria andInfoIDEqualTo(Integer value) {
            addCriterion("infoID =", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotEqualTo(Integer value) {
            addCriterion("infoID <>", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThan(Integer value) {
            addCriterion("infoID >", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("infoID >=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThan(Integer value) {
            addCriterion("infoID <", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThanOrEqualTo(Integer value) {
            addCriterion("infoID <=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDIn(List<Integer> values) {
            addCriterion("infoID in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotIn(List<Integer> values) {
            addCriterion("infoID not in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDBetween(Integer value1, Integer value2) {
            addCriterion("infoID between", value1, value2, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotBetween(Integer value1, Integer value2) {
            addCriterion("infoID not between", value1, value2, "infoID");
            return (Criteria) this;
        }

        public Criteria andMIDIsNull() {
            addCriterion("mID is null");
            return (Criteria) this;
        }

        public Criteria andMIDIsNotNull() {
            addCriterion("mID is not null");
            return (Criteria) this;
        }

        public Criteria andMIDEqualTo(Integer value) {
            addCriterion("mID =", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotEqualTo(Integer value) {
            addCriterion("mID <>", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThan(Integer value) {
            addCriterion("mID >", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("mID >=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThan(Integer value) {
            addCriterion("mID <", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThanOrEqualTo(Integer value) {
            addCriterion("mID <=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDIn(List<Integer> values) {
            addCriterion("mID in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotIn(List<Integer> values) {
            addCriterion("mID not in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDBetween(Integer value1, Integer value2) {
            addCriterion("mID between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotBetween(Integer value1, Integer value2) {
            addCriterion("mID not between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andNmIsNull() {
            addCriterion("nm is null");
            return (Criteria) this;
        }

        public Criteria andNmIsNotNull() {
            addCriterion("nm is not null");
            return (Criteria) this;
        }

        public Criteria andNmEqualTo(String value) {
            addCriterion("nm =", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotEqualTo(String value) {
            addCriterion("nm <>", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmGreaterThan(String value) {
            addCriterion("nm >", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmGreaterThanOrEqualTo(String value) {
            addCriterion("nm >=", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLessThan(String value) {
            addCriterion("nm <", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLessThanOrEqualTo(String value) {
            addCriterion("nm <=", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLike(String value) {
            addCriterion("nm like", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotLike(String value) {
            addCriterion("nm not like", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmIn(List<String> values) {
            addCriterion("nm in", values, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotIn(List<String> values) {
            addCriterion("nm not in", values, "nm");
            return (Criteria) this;
        }

        public Criteria andNmBetween(String value1, String value2) {
            addCriterion("nm between", value1, value2, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotBetween(String value1, String value2) {
            addCriterion("nm not between", value1, value2, "nm");
            return (Criteria) this;
        }

        public Criteria andCdIsNull() {
            addCriterion("cd is null");
            return (Criteria) this;
        }

        public Criteria andCdIsNotNull() {
            addCriterion("cd is not null");
            return (Criteria) this;
        }

        public Criteria andCdEqualTo(String value) {
            addCriterion("cd =", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotEqualTo(String value) {
            addCriterion("cd <>", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdGreaterThan(String value) {
            addCriterion("cd >", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdGreaterThanOrEqualTo(String value) {
            addCriterion("cd >=", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdLessThan(String value) {
            addCriterion("cd <", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdLessThanOrEqualTo(String value) {
            addCriterion("cd <=", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdLike(String value) {
            addCriterion("cd like", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotLike(String value) {
            addCriterion("cd not like", value, "cd");
            return (Criteria) this;
        }

        public Criteria andCdIn(List<String> values) {
            addCriterion("cd in", values, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotIn(List<String> values) {
            addCriterion("cd not in", values, "cd");
            return (Criteria) this;
        }

        public Criteria andCdBetween(String value1, String value2) {
            addCriterion("cd between", value1, value2, "cd");
            return (Criteria) this;
        }

        public Criteria andCdNotBetween(String value1, String value2) {
            addCriterion("cd not between", value1, value2, "cd");
            return (Criteria) this;
        }

        public Criteria andCurNumberIsNull() {
            addCriterion("curNumber is null");
            return (Criteria) this;
        }

        public Criteria andCurNumberIsNotNull() {
            addCriterion("curNumber is not null");
            return (Criteria) this;
        }

        public Criteria andCurNumberEqualTo(Double value) {
            addCriterion("curNumber =", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberNotEqualTo(Double value) {
            addCriterion("curNumber <>", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberGreaterThan(Double value) {
            addCriterion("curNumber >", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("curNumber >=", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberLessThan(Double value) {
            addCriterion("curNumber <", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberLessThanOrEqualTo(Double value) {
            addCriterion("curNumber <=", value, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberIn(List<Double> values) {
            addCriterion("curNumber in", values, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberNotIn(List<Double> values) {
            addCriterion("curNumber not in", values, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberBetween(Double value1, Double value2) {
            addCriterion("curNumber between", value1, value2, "curNumber");
            return (Criteria) this;
        }

        public Criteria andCurNumberNotBetween(Double value1, Double value2) {
            addCriterion("curNumber not between", value1, value2, "curNumber");
            return (Criteria) this;
        }

        public Criteria andTFlowIsNull() {
            addCriterion("tFlow is null");
            return (Criteria) this;
        }

        public Criteria andTFlowIsNotNull() {
            addCriterion("tFlow is not null");
            return (Criteria) this;
        }

        public Criteria andTFlowEqualTo(Double value) {
            addCriterion("tFlow =", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowNotEqualTo(Double value) {
            addCriterion("tFlow <>", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowGreaterThan(Double value) {
            addCriterion("tFlow >", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowGreaterThanOrEqualTo(Double value) {
            addCriterion("tFlow >=", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowLessThan(Double value) {
            addCriterion("tFlow <", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowLessThanOrEqualTo(Double value) {
            addCriterion("tFlow <=", value, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowIn(List<Double> values) {
            addCriterion("tFlow in", values, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowNotIn(List<Double> values) {
            addCriterion("tFlow not in", values, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowBetween(Double value1, Double value2) {
            addCriterion("tFlow between", value1, value2, "tFlow");
            return (Criteria) this;
        }

        public Criteria andTFlowNotBetween(Double value1, Double value2) {
            addCriterion("tFlow not between", value1, value2, "tFlow");
            return (Criteria) this;
        }

        public Criteria andReadTimeIsNull() {
            addCriterion("readTime is null");
            return (Criteria) this;
        }

        public Criteria andReadTimeIsNotNull() {
            addCriterion("readTime is not null");
            return (Criteria) this;
        }

        public Criteria andReadTimeEqualTo(String value) {
            addCriterion("readTime =", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeNotEqualTo(String value) {
            addCriterion("readTime <>", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeGreaterThan(String value) {
            addCriterion("readTime >", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeGreaterThanOrEqualTo(String value) {
            addCriterion("readTime >=", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeLessThan(String value) {
            addCriterion("readTime <", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeLessThanOrEqualTo(String value) {
            addCriterion("readTime <=", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeLike(String value) {
            addCriterion("readTime like", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeNotLike(String value) {
            addCriterion("readTime not like", value, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeIn(List<String> values) {
            addCriterion("readTime in", values, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeNotIn(List<String> values) {
            addCriterion("readTime not in", values, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeBetween(String value1, String value2) {
            addCriterion("readTime between", value1, value2, "readTime");
            return (Criteria) this;
        }

        public Criteria andReadTimeNotBetween(String value1, String value2) {
            addCriterion("readTime not between", value1, value2, "readTime");
            return (Criteria) this;
        }

        public Criteria andComTimeIsNull() {
            addCriterion("comTime is null");
            return (Criteria) this;
        }

        public Criteria andComTimeIsNotNull() {
            addCriterion("comTime is not null");
            return (Criteria) this;
        }

        public Criteria andComTimeEqualTo(String value) {
            addCriterion("comTime =", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeNotEqualTo(String value) {
            addCriterion("comTime <>", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeGreaterThan(String value) {
            addCriterion("comTime >", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeGreaterThanOrEqualTo(String value) {
            addCriterion("comTime >=", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeLessThan(String value) {
            addCriterion("comTime <", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeLessThanOrEqualTo(String value) {
            addCriterion("comTime <=", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeLike(String value) {
            addCriterion("comTime like", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeNotLike(String value) {
            addCriterion("comTime not like", value, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeIn(List<String> values) {
            addCriterion("comTime in", values, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeNotIn(List<String> values) {
            addCriterion("comTime not in", values, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeBetween(String value1, String value2) {
            addCriterion("comTime between", value1, value2, "comTime");
            return (Criteria) this;
        }

        public Criteria andComTimeNotBetween(String value1, String value2) {
            addCriterion("comTime not between", value1, value2, "comTime");
            return (Criteria) this;
        }

        public Criteria andComFlagIsNull() {
            addCriterion("comFlag is null");
            return (Criteria) this;
        }

        public Criteria andComFlagIsNotNull() {
            addCriterion("comFlag is not null");
            return (Criteria) this;
        }

        public Criteria andComFlagEqualTo(String value) {
            addCriterion("comFlag =", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagNotEqualTo(String value) {
            addCriterion("comFlag <>", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagGreaterThan(String value) {
            addCriterion("comFlag >", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagGreaterThanOrEqualTo(String value) {
            addCriterion("comFlag >=", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagLessThan(String value) {
            addCriterion("comFlag <", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagLessThanOrEqualTo(String value) {
            addCriterion("comFlag <=", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagLike(String value) {
            addCriterion("comFlag like", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagNotLike(String value) {
            addCriterion("comFlag not like", value, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagIn(List<String> values) {
            addCriterion("comFlag in", values, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagNotIn(List<String> values) {
            addCriterion("comFlag not in", values, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagBetween(String value1, String value2) {
            addCriterion("comFlag between", value1, value2, "comFlag");
            return (Criteria) this;
        }

        public Criteria andComFlagNotBetween(String value1, String value2) {
            addCriterion("comFlag not between", value1, value2, "comFlag");
            return (Criteria) this;
        }

        public Criteria andPIsNull() {
            addCriterion("P is null");
            return (Criteria) this;
        }

        public Criteria andPIsNotNull() {
            addCriterion("P is not null");
            return (Criteria) this;
        }

        public Criteria andPEqualTo(Double value) {
            addCriterion("P =", value, "p");
            return (Criteria) this;
        }

        public Criteria andPNotEqualTo(Double value) {
            addCriterion("P <>", value, "p");
            return (Criteria) this;
        }

        public Criteria andPGreaterThan(Double value) {
            addCriterion("P >", value, "p");
            return (Criteria) this;
        }

        public Criteria andPGreaterThanOrEqualTo(Double value) {
            addCriterion("P >=", value, "p");
            return (Criteria) this;
        }

        public Criteria andPLessThan(Double value) {
            addCriterion("P <", value, "p");
            return (Criteria) this;
        }

        public Criteria andPLessThanOrEqualTo(Double value) {
            addCriterion("P <=", value, "p");
            return (Criteria) this;
        }

        public Criteria andPIn(List<Double> values) {
            addCriterion("P in", values, "p");
            return (Criteria) this;
        }

        public Criteria andPNotIn(List<Double> values) {
            addCriterion("P not in", values, "p");
            return (Criteria) this;
        }

        public Criteria andPBetween(Double value1, Double value2) {
            addCriterion("P between", value1, value2, "p");
            return (Criteria) this;
        }

        public Criteria andPNotBetween(Double value1, Double value2) {
            addCriterion("P not between", value1, value2, "p");
            return (Criteria) this;
        }

        public Criteria andTIsNull() {
            addCriterion("T is null");
            return (Criteria) this;
        }

        public Criteria andTIsNotNull() {
            addCriterion("T is not null");
            return (Criteria) this;
        }

        public Criteria andTEqualTo(Double value) {
            addCriterion("T =", value, "t");
            return (Criteria) this;
        }

        public Criteria andTNotEqualTo(Double value) {
            addCriterion("T <>", value, "t");
            return (Criteria) this;
        }

        public Criteria andTGreaterThan(Double value) {
            addCriterion("T >", value, "t");
            return (Criteria) this;
        }

        public Criteria andTGreaterThanOrEqualTo(Double value) {
            addCriterion("T >=", value, "t");
            return (Criteria) this;
        }

        public Criteria andTLessThan(Double value) {
            addCriterion("T <", value, "t");
            return (Criteria) this;
        }

        public Criteria andTLessThanOrEqualTo(Double value) {
            addCriterion("T <=", value, "t");
            return (Criteria) this;
        }

        public Criteria andTIn(List<Double> values) {
            addCriterion("T in", values, "t");
            return (Criteria) this;
        }

        public Criteria andTNotIn(List<Double> values) {
            addCriterion("T not in", values, "t");
            return (Criteria) this;
        }

        public Criteria andTBetween(Double value1, Double value2) {
            addCriterion("T between", value1, value2, "t");
            return (Criteria) this;
        }

        public Criteria andTNotBetween(Double value1, Double value2) {
            addCriterion("T not between", value1, value2, "t");
            return (Criteria) this;
        }

        public Criteria andAlmIsNull() {
            addCriterion("alm is null");
            return (Criteria) this;
        }

        public Criteria andAlmIsNotNull() {
            addCriterion("alm is not null");
            return (Criteria) this;
        }

        public Criteria andAlmEqualTo(Integer value) {
            addCriterion("alm =", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmNotEqualTo(Integer value) {
            addCriterion("alm <>", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmGreaterThan(Integer value) {
            addCriterion("alm >", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmGreaterThanOrEqualTo(Integer value) {
            addCriterion("alm >=", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmLessThan(Integer value) {
            addCriterion("alm <", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmLessThanOrEqualTo(Integer value) {
            addCriterion("alm <=", value, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmIn(List<Integer> values) {
            addCriterion("alm in", values, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmNotIn(List<Integer> values) {
            addCriterion("alm not in", values, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmBetween(Integer value1, Integer value2) {
            addCriterion("alm between", value1, value2, "alm");
            return (Criteria) this;
        }

        public Criteria andAlmNotBetween(Integer value1, Integer value2) {
            addCriterion("alm not between", value1, value2, "alm");
            return (Criteria) this;
        }

        public Criteria andReFlagIsNull() {
            addCriterion("reFlag is null");
            return (Criteria) this;
        }

        public Criteria andReFlagIsNotNull() {
            addCriterion("reFlag is not null");
            return (Criteria) this;
        }

        public Criteria andReFlagEqualTo(Integer value) {
            addCriterion("reFlag =", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagNotEqualTo(Integer value) {
            addCriterion("reFlag <>", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagGreaterThan(Integer value) {
            addCriterion("reFlag >", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("reFlag >=", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagLessThan(Integer value) {
            addCriterion("reFlag <", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagLessThanOrEqualTo(Integer value) {
            addCriterion("reFlag <=", value, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagIn(List<Integer> values) {
            addCriterion("reFlag in", values, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagNotIn(List<Integer> values) {
            addCriterion("reFlag not in", values, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagBetween(Integer value1, Integer value2) {
            addCriterion("reFlag between", value1, value2, "reFlag");
            return (Criteria) this;
        }

        public Criteria andReFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("reFlag not between", value1, value2, "reFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_readRec1511
     *
     * @mbggenerated do_not_delete_during_merge Wed Nov 11 16:36:15 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_readRec1511
     *
     * @mbggenerated Wed Nov 11 16:36:15 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}