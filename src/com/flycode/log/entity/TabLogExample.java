package com.flycode.log.entity;

import java.util.ArrayList;
import java.util.List;

public class TabLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public TabLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogIDIsNull() {
            addCriterion("logID is null");
            return (Criteria) this;
        }

        public Criteria andLogIDIsNotNull() {
            addCriterion("logID is not null");
            return (Criteria) this;
        }

        public Criteria andLogIDEqualTo(Integer value) {
            addCriterion("logID =", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDNotEqualTo(Integer value) {
            addCriterion("logID <>", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDGreaterThan(Integer value) {
            addCriterion("logID >", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("logID >=", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDLessThan(Integer value) {
            addCriterion("logID <", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDLessThanOrEqualTo(Integer value) {
            addCriterion("logID <=", value, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDIn(List<Integer> values) {
            addCriterion("logID in", values, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDNotIn(List<Integer> values) {
            addCriterion("logID not in", values, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDBetween(Integer value1, Integer value2) {
            addCriterion("logID between", value1, value2, "logID");
            return (Criteria) this;
        }

        public Criteria andLogIDNotBetween(Integer value1, Integer value2) {
            addCriterion("logID not between", value1, value2, "logID");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNull() {
            addCriterion("logTime is null");
            return (Criteria) this;
        }

        public Criteria andLogTimeIsNotNull() {
            addCriterion("logTime is not null");
            return (Criteria) this;
        }

        public Criteria andLogTimeEqualTo(String value) {
            addCriterion("logTime =", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotEqualTo(String value) {
            addCriterion("logTime <>", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThan(String value) {
            addCriterion("logTime >", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeGreaterThanOrEqualTo(String value) {
            addCriterion("logTime >=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThan(String value) {
            addCriterion("logTime <", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLessThanOrEqualTo(String value) {
            addCriterion("logTime <=", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeLike(String value) {
            addCriterion("logTime like", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotLike(String value) {
            addCriterion("logTime not like", value, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeIn(List<String> values) {
            addCriterion("logTime in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotIn(List<String> values) {
            addCriterion("logTime not in", values, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeBetween(String value1, String value2) {
            addCriterion("logTime between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogTimeNotBetween(String value1, String value2) {
            addCriterion("logTime not between", value1, value2, "logTime");
            return (Criteria) this;
        }

        public Criteria andLogInfoIsNull() {
            addCriterion("logInfo is null");
            return (Criteria) this;
        }

        public Criteria andLogInfoIsNotNull() {
            addCriterion("logInfo is not null");
            return (Criteria) this;
        }

        public Criteria andLogInfoEqualTo(String value) {
            addCriterion("logInfo =", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoNotEqualTo(String value) {
            addCriterion("logInfo <>", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoGreaterThan(String value) {
            addCriterion("logInfo >", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoGreaterThanOrEqualTo(String value) {
            addCriterion("logInfo >=", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoLessThan(String value) {
            addCriterion("logInfo <", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoLessThanOrEqualTo(String value) {
            addCriterion("logInfo <=", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoLike(String value) {
            addCriterion("logInfo like", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoNotLike(String value) {
            addCriterion("logInfo not like", value, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoIn(List<String> values) {
            addCriterion("logInfo in", values, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoNotIn(List<String> values) {
            addCriterion("logInfo not in", values, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoBetween(String value1, String value2) {
            addCriterion("logInfo between", value1, value2, "logInfo");
            return (Criteria) this;
        }

        public Criteria andLogInfoNotBetween(String value1, String value2) {
            addCriterion("logInfo not between", value1, value2, "logInfo");
            return (Criteria) this;
        }

        public Criteria andSimIsNull() {
            addCriterion("sim is null");
            return (Criteria) this;
        }

        public Criteria andSimIsNotNull() {
            addCriterion("sim is not null");
            return (Criteria) this;
        }

        public Criteria andSimEqualTo(String value) {
            addCriterion("sim =", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimNotEqualTo(String value) {
            addCriterion("sim <>", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimGreaterThan(String value) {
            addCriterion("sim >", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimGreaterThanOrEqualTo(String value) {
            addCriterion("sim >=", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimLessThan(String value) {
            addCriterion("sim <", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimLessThanOrEqualTo(String value) {
            addCriterion("sim <=", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimLike(String value) {
            addCriterion("sim like", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimNotLike(String value) {
            addCriterion("sim not like", value, "sim");
            return (Criteria) this;
        }

        public Criteria andSimIn(List<String> values) {
            addCriterion("sim in", values, "sim");
            return (Criteria) this;
        }

        public Criteria andSimNotIn(List<String> values) {
            addCriterion("sim not in", values, "sim");
            return (Criteria) this;
        }

        public Criteria andSimBetween(String value1, String value2) {
            addCriterion("sim between", value1, value2, "sim");
            return (Criteria) this;
        }

        public Criteria andSimNotBetween(String value1, String value2) {
            addCriterion("sim not between", value1, value2, "sim");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_log
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 13 11:14:55 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_log
     *
     * @mbggenerated Fri Nov 13 11:14:55 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}