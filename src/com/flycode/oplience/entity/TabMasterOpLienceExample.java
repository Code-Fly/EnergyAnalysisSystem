package com.flycode.oplience.entity;

import java.util.ArrayList;
import java.util.List;

public class TabMasterOpLienceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public TabMasterOpLienceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFunIDIsNull() {
            addCriterion("funID is null");
            return (Criteria) this;
        }

        public Criteria andFunIDIsNotNull() {
            addCriterion("funID is not null");
            return (Criteria) this;
        }

        public Criteria andFunIDEqualTo(Integer value) {
            addCriterion("funID =", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDNotEqualTo(Integer value) {
            addCriterion("funID <>", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDGreaterThan(Integer value) {
            addCriterion("funID >", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("funID >=", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDLessThan(Integer value) {
            addCriterion("funID <", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDLessThanOrEqualTo(Integer value) {
            addCriterion("funID <=", value, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDIn(List<Integer> values) {
            addCriterion("funID in", values, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDNotIn(List<Integer> values) {
            addCriterion("funID not in", values, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDBetween(Integer value1, Integer value2) {
            addCriterion("funID between", value1, value2, "funID");
            return (Criteria) this;
        }

        public Criteria andFunIDNotBetween(Integer value1, Integer value2) {
            addCriterion("funID not between", value1, value2, "funID");
            return (Criteria) this;
        }

        public Criteria andOpIDIsNull() {
            addCriterion("opID is null");
            return (Criteria) this;
        }

        public Criteria andOpIDIsNotNull() {
            addCriterion("opID is not null");
            return (Criteria) this;
        }

        public Criteria andOpIDEqualTo(Integer value) {
            addCriterion("opID =", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDNotEqualTo(Integer value) {
            addCriterion("opID <>", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDGreaterThan(Integer value) {
            addCriterion("opID >", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("opID >=", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDLessThan(Integer value) {
            addCriterion("opID <", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDLessThanOrEqualTo(Integer value) {
            addCriterion("opID <=", value, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDIn(List<Integer> values) {
            addCriterion("opID in", values, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDNotIn(List<Integer> values) {
            addCriterion("opID not in", values, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDBetween(Integer value1, Integer value2) {
            addCriterion("opID between", value1, value2, "opID");
            return (Criteria) this;
        }

        public Criteria andOpIDNotBetween(Integer value1, Integer value2) {
            addCriterion("opID not between", value1, value2, "opID");
            return (Criteria) this;
        }

        public Criteria andMIDIsNull() {
            addCriterion("mID is null");
            return (Criteria) this;
        }

        public Criteria andMIDIsNotNull() {
            addCriterion("mID is not null");
            return (Criteria) this;
        }

        public Criteria andMIDEqualTo(Integer value) {
            addCriterion("mID =", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotEqualTo(Integer value) {
            addCriterion("mID <>", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThan(Integer value) {
            addCriterion("mID >", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("mID >=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThan(Integer value) {
            addCriterion("mID <", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThanOrEqualTo(Integer value) {
            addCriterion("mID <=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDIn(List<Integer> values) {
            addCriterion("mID in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotIn(List<Integer> values) {
            addCriterion("mID not in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDBetween(Integer value1, Integer value2) {
            addCriterion("mID between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotBetween(Integer value1, Integer value2) {
            addCriterion("mID not between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andNmIsNull() {
            addCriterion("nm is null");
            return (Criteria) this;
        }

        public Criteria andNmIsNotNull() {
            addCriterion("nm is not null");
            return (Criteria) this;
        }

        public Criteria andNmEqualTo(String value) {
            addCriterion("nm =", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotEqualTo(String value) {
            addCriterion("nm <>", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmGreaterThan(String value) {
            addCriterion("nm >", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmGreaterThanOrEqualTo(String value) {
            addCriterion("nm >=", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLessThan(String value) {
            addCriterion("nm <", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLessThanOrEqualTo(String value) {
            addCriterion("nm <=", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmLike(String value) {
            addCriterion("nm like", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotLike(String value) {
            addCriterion("nm not like", value, "nm");
            return (Criteria) this;
        }

        public Criteria andNmIn(List<String> values) {
            addCriterion("nm in", values, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotIn(List<String> values) {
            addCriterion("nm not in", values, "nm");
            return (Criteria) this;
        }

        public Criteria andNmBetween(String value1, String value2) {
            addCriterion("nm between", value1, value2, "nm");
            return (Criteria) this;
        }

        public Criteria andNmNotBetween(String value1, String value2) {
            addCriterion("nm not between", value1, value2, "nm");
            return (Criteria) this;
        }

        public Criteria andInfoIDIsNull() {
            addCriterion("infoID is null");
            return (Criteria) this;
        }

        public Criteria andInfoIDIsNotNull() {
            addCriterion("infoID is not null");
            return (Criteria) this;
        }

        public Criteria andInfoIDEqualTo(String value) {
            addCriterion("infoID =", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotEqualTo(String value) {
            addCriterion("infoID <>", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThan(String value) {
            addCriterion("infoID >", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThanOrEqualTo(String value) {
            addCriterion("infoID >=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThan(String value) {
            addCriterion("infoID <", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThanOrEqualTo(String value) {
            addCriterion("infoID <=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLike(String value) {
            addCriterion("infoID like", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotLike(String value) {
            addCriterion("infoID not like", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDIn(List<String> values) {
            addCriterion("infoID in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotIn(List<String> values) {
            addCriterion("infoID not in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDBetween(String value1, String value2) {
            addCriterion("infoID between", value1, value2, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotBetween(String value1, String value2) {
            addCriterion("infoID not between", value1, value2, "infoID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_master_opLience
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 16 14:12:42 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_master_opLience
     *
     * @mbggenerated Mon Nov 16 14:12:42 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}