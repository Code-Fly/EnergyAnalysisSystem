package com.flycode.yearaccount.entity;

import java.util.ArrayList;
import java.util.List;

public class TabYearAccountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public TabYearAccountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(Integer value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(Integer value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(Integer value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<Integer> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andMIDIsNull() {
            addCriterion("mID is null");
            return (Criteria) this;
        }

        public Criteria andMIDIsNotNull() {
            addCriterion("mID is not null");
            return (Criteria) this;
        }

        public Criteria andMIDEqualTo(Integer value) {
            addCriterion("mID =", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotEqualTo(Integer value) {
            addCriterion("mID <>", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThan(Integer value) {
            addCriterion("mID >", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("mID >=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThan(Integer value) {
            addCriterion("mID <", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDLessThanOrEqualTo(Integer value) {
            addCriterion("mID <=", value, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDIn(List<Integer> values) {
            addCriterion("mID in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotIn(List<Integer> values) {
            addCriterion("mID not in", values, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDBetween(Integer value1, Integer value2) {
            addCriterion("mID between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andMIDNotBetween(Integer value1, Integer value2) {
            addCriterion("mID not between", value1, value2, "mID");
            return (Criteria) this;
        }

        public Criteria andCollectYearIsNull() {
            addCriterion("collectYear is null");
            return (Criteria) this;
        }

        public Criteria andCollectYearIsNotNull() {
            addCriterion("collectYear is not null");
            return (Criteria) this;
        }

        public Criteria andCollectYearEqualTo(String value) {
            addCriterion("collectYear =", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearNotEqualTo(String value) {
            addCriterion("collectYear <>", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearGreaterThan(String value) {
            addCriterion("collectYear >", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearGreaterThanOrEqualTo(String value) {
            addCriterion("collectYear >=", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearLessThan(String value) {
            addCriterion("collectYear <", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearLessThanOrEqualTo(String value) {
            addCriterion("collectYear <=", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearLike(String value) {
            addCriterion("collectYear like", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearNotLike(String value) {
            addCriterion("collectYear not like", value, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearIn(List<String> values) {
            addCriterion("collectYear in", values, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearNotIn(List<String> values) {
            addCriterion("collectYear not in", values, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearBetween(String value1, String value2) {
            addCriterion("collectYear between", value1, value2, "collectYear");
            return (Criteria) this;
        }

        public Criteria andCollectYearNotBetween(String value1, String value2) {
            addCriterion("collectYear not between", value1, value2, "collectYear");
            return (Criteria) this;
        }

        public Criteria andJanNumberIsNull() {
            addCriterion("JanNumber is null");
            return (Criteria) this;
        }

        public Criteria andJanNumberIsNotNull() {
            addCriterion("JanNumber is not null");
            return (Criteria) this;
        }

        public Criteria andJanNumberEqualTo(Double value) {
            addCriterion("JanNumber =", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberNotEqualTo(Double value) {
            addCriterion("JanNumber <>", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberGreaterThan(Double value) {
            addCriterion("JanNumber >", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("JanNumber >=", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberLessThan(Double value) {
            addCriterion("JanNumber <", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberLessThanOrEqualTo(Double value) {
            addCriterion("JanNumber <=", value, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberIn(List<Double> values) {
            addCriterion("JanNumber in", values, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberNotIn(List<Double> values) {
            addCriterion("JanNumber not in", values, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberBetween(Double value1, Double value2) {
            addCriterion("JanNumber between", value1, value2, "janNumber");
            return (Criteria) this;
        }

        public Criteria andJanNumberNotBetween(Double value1, Double value2) {
            addCriterion("JanNumber not between", value1, value2, "janNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberIsNull() {
            addCriterion("FebNumber is null");
            return (Criteria) this;
        }

        public Criteria andFebNumberIsNotNull() {
            addCriterion("FebNumber is not null");
            return (Criteria) this;
        }

        public Criteria andFebNumberEqualTo(Double value) {
            addCriterion("FebNumber =", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberNotEqualTo(Double value) {
            addCriterion("FebNumber <>", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberGreaterThan(Double value) {
            addCriterion("FebNumber >", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("FebNumber >=", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberLessThan(Double value) {
            addCriterion("FebNumber <", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberLessThanOrEqualTo(Double value) {
            addCriterion("FebNumber <=", value, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberIn(List<Double> values) {
            addCriterion("FebNumber in", values, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberNotIn(List<Double> values) {
            addCriterion("FebNumber not in", values, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberBetween(Double value1, Double value2) {
            addCriterion("FebNumber between", value1, value2, "febNumber");
            return (Criteria) this;
        }

        public Criteria andFebNumberNotBetween(Double value1, Double value2) {
            addCriterion("FebNumber not between", value1, value2, "febNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberIsNull() {
            addCriterion("MarNumber is null");
            return (Criteria) this;
        }

        public Criteria andMarNumberIsNotNull() {
            addCriterion("MarNumber is not null");
            return (Criteria) this;
        }

        public Criteria andMarNumberEqualTo(Double value) {
            addCriterion("MarNumber =", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberNotEqualTo(Double value) {
            addCriterion("MarNumber <>", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberGreaterThan(Double value) {
            addCriterion("MarNumber >", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("MarNumber >=", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberLessThan(Double value) {
            addCriterion("MarNumber <", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberLessThanOrEqualTo(Double value) {
            addCriterion("MarNumber <=", value, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberIn(List<Double> values) {
            addCriterion("MarNumber in", values, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberNotIn(List<Double> values) {
            addCriterion("MarNumber not in", values, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberBetween(Double value1, Double value2) {
            addCriterion("MarNumber between", value1, value2, "marNumber");
            return (Criteria) this;
        }

        public Criteria andMarNumberNotBetween(Double value1, Double value2) {
            addCriterion("MarNumber not between", value1, value2, "marNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberIsNull() {
            addCriterion("AprNumber is null");
            return (Criteria) this;
        }

        public Criteria andAprNumberIsNotNull() {
            addCriterion("AprNumber is not null");
            return (Criteria) this;
        }

        public Criteria andAprNumberEqualTo(Double value) {
            addCriterion("AprNumber =", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberNotEqualTo(Double value) {
            addCriterion("AprNumber <>", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberGreaterThan(Double value) {
            addCriterion("AprNumber >", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("AprNumber >=", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberLessThan(Double value) {
            addCriterion("AprNumber <", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberLessThanOrEqualTo(Double value) {
            addCriterion("AprNumber <=", value, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberIn(List<Double> values) {
            addCriterion("AprNumber in", values, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberNotIn(List<Double> values) {
            addCriterion("AprNumber not in", values, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberBetween(Double value1, Double value2) {
            addCriterion("AprNumber between", value1, value2, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andAprNumberNotBetween(Double value1, Double value2) {
            addCriterion("AprNumber not between", value1, value2, "aprNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberIsNull() {
            addCriterion("MayNumber is null");
            return (Criteria) this;
        }

        public Criteria andMayNumberIsNotNull() {
            addCriterion("MayNumber is not null");
            return (Criteria) this;
        }

        public Criteria andMayNumberEqualTo(Double value) {
            addCriterion("MayNumber =", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberNotEqualTo(Double value) {
            addCriterion("MayNumber <>", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberGreaterThan(Double value) {
            addCriterion("MayNumber >", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("MayNumber >=", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberLessThan(Double value) {
            addCriterion("MayNumber <", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberLessThanOrEqualTo(Double value) {
            addCriterion("MayNumber <=", value, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberIn(List<Double> values) {
            addCriterion("MayNumber in", values, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberNotIn(List<Double> values) {
            addCriterion("MayNumber not in", values, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberBetween(Double value1, Double value2) {
            addCriterion("MayNumber between", value1, value2, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andMayNumberNotBetween(Double value1, Double value2) {
            addCriterion("MayNumber not between", value1, value2, "mayNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberIsNull() {
            addCriterion("JunNumber is null");
            return (Criteria) this;
        }

        public Criteria andJunNumberIsNotNull() {
            addCriterion("JunNumber is not null");
            return (Criteria) this;
        }

        public Criteria andJunNumberEqualTo(Double value) {
            addCriterion("JunNumber =", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberNotEqualTo(Double value) {
            addCriterion("JunNumber <>", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberGreaterThan(Double value) {
            addCriterion("JunNumber >", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("JunNumber >=", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberLessThan(Double value) {
            addCriterion("JunNumber <", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberLessThanOrEqualTo(Double value) {
            addCriterion("JunNumber <=", value, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberIn(List<Double> values) {
            addCriterion("JunNumber in", values, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberNotIn(List<Double> values) {
            addCriterion("JunNumber not in", values, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberBetween(Double value1, Double value2) {
            addCriterion("JunNumber between", value1, value2, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJunNumberNotBetween(Double value1, Double value2) {
            addCriterion("JunNumber not between", value1, value2, "junNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberIsNull() {
            addCriterion("JulNumber is null");
            return (Criteria) this;
        }

        public Criteria andJulNumberIsNotNull() {
            addCriterion("JulNumber is not null");
            return (Criteria) this;
        }

        public Criteria andJulNumberEqualTo(Double value) {
            addCriterion("JulNumber =", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberNotEqualTo(Double value) {
            addCriterion("JulNumber <>", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberGreaterThan(Double value) {
            addCriterion("JulNumber >", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("JulNumber >=", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberLessThan(Double value) {
            addCriterion("JulNumber <", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberLessThanOrEqualTo(Double value) {
            addCriterion("JulNumber <=", value, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberIn(List<Double> values) {
            addCriterion("JulNumber in", values, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberNotIn(List<Double> values) {
            addCriterion("JulNumber not in", values, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberBetween(Double value1, Double value2) {
            addCriterion("JulNumber between", value1, value2, "julNumber");
            return (Criteria) this;
        }

        public Criteria andJulNumberNotBetween(Double value1, Double value2) {
            addCriterion("JulNumber not between", value1, value2, "julNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberIsNull() {
            addCriterion("AugNumber is null");
            return (Criteria) this;
        }

        public Criteria andAugNumberIsNotNull() {
            addCriterion("AugNumber is not null");
            return (Criteria) this;
        }

        public Criteria andAugNumberEqualTo(Double value) {
            addCriterion("AugNumber =", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberNotEqualTo(Double value) {
            addCriterion("AugNumber <>", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberGreaterThan(Double value) {
            addCriterion("AugNumber >", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("AugNumber >=", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberLessThan(Double value) {
            addCriterion("AugNumber <", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberLessThanOrEqualTo(Double value) {
            addCriterion("AugNumber <=", value, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberIn(List<Double> values) {
            addCriterion("AugNumber in", values, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberNotIn(List<Double> values) {
            addCriterion("AugNumber not in", values, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberBetween(Double value1, Double value2) {
            addCriterion("AugNumber between", value1, value2, "augNumber");
            return (Criteria) this;
        }

        public Criteria andAugNumberNotBetween(Double value1, Double value2) {
            addCriterion("AugNumber not between", value1, value2, "augNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberIsNull() {
            addCriterion("SepNumber is null");
            return (Criteria) this;
        }

        public Criteria andSepNumberIsNotNull() {
            addCriterion("SepNumber is not null");
            return (Criteria) this;
        }

        public Criteria andSepNumberEqualTo(Double value) {
            addCriterion("SepNumber =", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberNotEqualTo(Double value) {
            addCriterion("SepNumber <>", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberGreaterThan(Double value) {
            addCriterion("SepNumber >", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("SepNumber >=", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberLessThan(Double value) {
            addCriterion("SepNumber <", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberLessThanOrEqualTo(Double value) {
            addCriterion("SepNumber <=", value, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberIn(List<Double> values) {
            addCriterion("SepNumber in", values, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberNotIn(List<Double> values) {
            addCriterion("SepNumber not in", values, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberBetween(Double value1, Double value2) {
            addCriterion("SepNumber between", value1, value2, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andSepNumberNotBetween(Double value1, Double value2) {
            addCriterion("SepNumber not between", value1, value2, "sepNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberIsNull() {
            addCriterion("OctNumber is null");
            return (Criteria) this;
        }

        public Criteria andOctNumberIsNotNull() {
            addCriterion("OctNumber is not null");
            return (Criteria) this;
        }

        public Criteria andOctNumberEqualTo(Double value) {
            addCriterion("OctNumber =", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberNotEqualTo(Double value) {
            addCriterion("OctNumber <>", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberGreaterThan(Double value) {
            addCriterion("OctNumber >", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("OctNumber >=", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberLessThan(Double value) {
            addCriterion("OctNumber <", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberLessThanOrEqualTo(Double value) {
            addCriterion("OctNumber <=", value, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberIn(List<Double> values) {
            addCriterion("OctNumber in", values, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberNotIn(List<Double> values) {
            addCriterion("OctNumber not in", values, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberBetween(Double value1, Double value2) {
            addCriterion("OctNumber between", value1, value2, "octNumber");
            return (Criteria) this;
        }

        public Criteria andOctNumberNotBetween(Double value1, Double value2) {
            addCriterion("OctNumber not between", value1, value2, "octNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberIsNull() {
            addCriterion("NovNumber is null");
            return (Criteria) this;
        }

        public Criteria andNovNumberIsNotNull() {
            addCriterion("NovNumber is not null");
            return (Criteria) this;
        }

        public Criteria andNovNumberEqualTo(Double value) {
            addCriterion("NovNumber =", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberNotEqualTo(Double value) {
            addCriterion("NovNumber <>", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberGreaterThan(Double value) {
            addCriterion("NovNumber >", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("NovNumber >=", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberLessThan(Double value) {
            addCriterion("NovNumber <", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberLessThanOrEqualTo(Double value) {
            addCriterion("NovNumber <=", value, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberIn(List<Double> values) {
            addCriterion("NovNumber in", values, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberNotIn(List<Double> values) {
            addCriterion("NovNumber not in", values, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberBetween(Double value1, Double value2) {
            addCriterion("NovNumber between", value1, value2, "novNumber");
            return (Criteria) this;
        }

        public Criteria andNovNumberNotBetween(Double value1, Double value2) {
            addCriterion("NovNumber not between", value1, value2, "novNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberIsNull() {
            addCriterion("DecNumber is null");
            return (Criteria) this;
        }

        public Criteria andDecNumberIsNotNull() {
            addCriterion("DecNumber is not null");
            return (Criteria) this;
        }

        public Criteria andDecNumberEqualTo(Double value) {
            addCriterion("DecNumber =", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberNotEqualTo(Double value) {
            addCriterion("DecNumber <>", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberGreaterThan(Double value) {
            addCriterion("DecNumber >", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberGreaterThanOrEqualTo(Double value) {
            addCriterion("DecNumber >=", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberLessThan(Double value) {
            addCriterion("DecNumber <", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberLessThanOrEqualTo(Double value) {
            addCriterion("DecNumber <=", value, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberIn(List<Double> values) {
            addCriterion("DecNumber in", values, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberNotIn(List<Double> values) {
            addCriterion("DecNumber not in", values, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberBetween(Double value1, Double value2) {
            addCriterion("DecNumber between", value1, value2, "decNumber");
            return (Criteria) this;
        }

        public Criteria andDecNumberNotBetween(Double value1, Double value2) {
            addCriterion("DecNumber not between", value1, value2, "decNumber");
            return (Criteria) this;
        }

        public Criteria andInfoIDIsNull() {
            addCriterion("infoID is null");
            return (Criteria) this;
        }

        public Criteria andInfoIDIsNotNull() {
            addCriterion("infoID is not null");
            return (Criteria) this;
        }

        public Criteria andInfoIDEqualTo(String value) {
            addCriterion("infoID =", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotEqualTo(String value) {
            addCriterion("infoID <>", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThan(String value) {
            addCriterion("infoID >", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDGreaterThanOrEqualTo(String value) {
            addCriterion("infoID >=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThan(String value) {
            addCriterion("infoID <", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLessThanOrEqualTo(String value) {
            addCriterion("infoID <=", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDLike(String value) {
            addCriterion("infoID like", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotLike(String value) {
            addCriterion("infoID not like", value, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDIn(List<String> values) {
            addCriterion("infoID in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotIn(List<String> values) {
            addCriterion("infoID not in", values, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDBetween(String value1, String value2) {
            addCriterion("infoID between", value1, value2, "infoID");
            return (Criteria) this;
        }

        public Criteria andInfoIDNotBetween(String value1, String value2) {
            addCriterion("infoID not between", value1, value2, "infoID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_YearAccount
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 12 12:52:33 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tab_YearAccount
     *
     * @mbggenerated Thu Nov 12 12:52:33 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}